/*
**
** The JavaScript code is generated by atscc2js
** The starting compilation time is: 2018-8-18: 22h:22m
**
*/

function
highlight_0(arg0, arg1, arg2)
{
//
// knd = 0
  var tmp1
  var tmp3
  var tmplab, tmplab_js
//
  // __patsflab_highlight_0
  tmp1 = createAttribute(arg0, "class");
  attr_setValue(tmp1, "highlight");
  tmp3 = setAttributeNode(arg1, tmp1);
  tmp3;
  return/*_void*/;
} // end-of-function


function
nest_1(arg0, arg1)
{
//
// knd = 0
  var tmpret4
  var tmp5
  var tmp6
  var tmp7
  var tmp8
  var tmp9
  var tmplab, tmplab_js
//
  // __patsflab_nest_1
  tmp5 = ats2jspre_eq_int0_int0(arg1, 0);
  if(tmp5) {
    tmpret4 = createTextNode(arg0, "The end");
  } else {
    tmp6 = createElement(arg0, "div");
    tmp8 = ats2jspre_sub_int0_int0(arg1, 1);
    tmp7 = nest_1(arg0, tmp8);
    tmp9 = appendChild(tmp6, tmp7);
    tmpret4 = tmp6;
  } // end-of-if
  return tmpret4;
} // end-of-function


function
testcase1_2(arg0, arg1)
{
//
// knd = 0
  var tmp12
  var tmp14
  var tmp15
  var tmp17
  var tmp18
  var tmp20
  var tmp21
  var tmp22
  var tmp24
  var tmp25
  var tmp27
  var tmp28
  var tmp30
  var tmp31
  var tmp32
  var tmp34
  var tmp35
  var tmp37
  var tmp38
  var tmp40
  var tmp41
  var tmplab, tmplab_js
//
  // __patsflab_testcase1_2
  set_innerHTML(arg1, "<a href=\"#\">Hi</a> <!-- this is a HTMLAnchorElement which inherits from... -->");
  tmp12 = firstChild(arg1);
  tmp15 = domnoderef_is_null(tmp12);
  tmp14 = ats2jspre_neg_bool1(tmp15);
  atspre_assert_bool1(tmp14);
  tmp18 = nodeName(tmp12);
  tmp17 = ats2jspre_eq_string_string(tmp18, "A");
  atspre_assert_bool0(tmp17);
  tmp21 = nodeType(tmp12);
  tmp20 = ats2jspre_eq_int1_int1(tmp21, 1);
  atspre_assert_bool1(tmp20);
  tmp22 = nextSibling(tmp12);
  tmp25 = domnoderef_is_null(tmp22);
  tmp24 = ats2jspre_neg_bool1(tmp25);
  atspre_assert_bool1(tmp24);
  tmp28 = nodeName(tmp22);
  tmp27 = ats2jspre_eq_string_string(tmp28, "#text");
  atspre_assert_bool0(tmp27);
  tmp31 = nodeType(tmp22);
  tmp30 = ats2jspre_eq_int1_int1(tmp31, 3);
  atspre_assert_bool1(tmp30);
  tmp32 = nextSibling(tmp22);
  tmp35 = domnoderef_is_null(tmp32);
  tmp34 = ats2jspre_neg_bool1(tmp35);
  atspre_assert_bool1(tmp34);
  tmp38 = nodeName(tmp32);
  tmp37 = ats2jspre_eq_string_string(tmp38, "#comment");
  atspre_assert_bool0(tmp37);
  tmp41 = nodeType(tmp32);
  tmp40 = ats2jspre_eq_int1_int1(tmp41, 8);
  atspre_assert_bool1(tmp40);
  tmp32;
  return/*_void*/;
} // end-of-function


function
testcase2_3(arg0, arg1)
{
//
// knd = 0
  var tmp44
  var tmp46
  var tmp47
  var tmp49
  var tmp50
  var tmp52
  var tmp53
  var tmp55
  var tmp57
  var tmp58
  var tmp60
  var tmp61
  var tmp63
  var tmp64
  var tmplab, tmplab_js
//
  // __patsflab_testcase2_3
  set_innerHTML(arg1, "hello");
  tmp44 = firstChild(arg1);
  tmp47 = domnoderef_is_null(tmp44);
  tmp46 = ats2jspre_neg_bool1(tmp47);
  atspre_assert_bool1(tmp46);
  tmp50 = nodeType(tmp44);
  tmp49 = ats2jspre_eq_int1_int1(tmp50, 3);
  atspre_assert_bool1(tmp49);
  tmp53 = nodeValue(tmp44);
  tmp52 = ats2jspre_eq_string_string("hello", tmp53);
  atspre_assert_bool0(tmp52);
  set_innerHTML(arg1, "<!-- commentary -->");
  tmp55 = firstChild(arg1);
  tmp58 = domnoderef_is_null(tmp55);
  tmp57 = ats2jspre_neg_bool1(tmp58);
  atspre_assert_bool1(tmp57);
  tmp61 = nodeType(tmp55);
  tmp60 = ats2jspre_eq_int1_int1(tmp61, 8);
  atspre_assert_bool1(tmp60);
  tmp64 = nodeValue(tmp55);
  tmp63 = ats2jspre_eq_string_string(" commentary ", tmp64);
  atspre_assert_bool0(tmp63);
  tmp55;
  return/*_void*/;
} // end-of-function


function
testcase3_4(arg0, arg1)
{
//
// knd = 0
  var tmp67
  var tmp68
  var tmp69
  var tmp71
  var tmp72
  var tmp73
  var tmp74
  var tmp76
  var tmp77
  var tmplab, tmplab_js
//
  // __patsflab_testcase3_4
  set_innerHTML(arg1, "<p>Hi</p>");
  tmp67 = createElement(arg0, "strong");
  tmp68 = createTextNode(arg0, " Dude");
  tmp69 = firstChild(arg1);
  tmp72 = domnoderef_is_null(tmp69);
  tmp71 = ats2jspre_neg_bool1(tmp72);
  atspre_assert_bool1(tmp71);
  tmp73 = appendChild(tmp69, tmp67);
  tmp74 = appendChild(tmp73, tmp68);
  tmp77 = get_innerHTML(arg1);
  tmp76 = ats2jspre_eq_string_string("<p>Hi<strong> Dude</strong></p>", tmp77);
  atspre_assert_bool0(tmp76);
  tmp74;
  return/*_void*/;
} // end-of-function


function
testcase4_5(arg0, arg1)
{
//
// knd = 0
  var tmp80
  var tmp81
  var tmp82
  var tmp83
  var tmp85
  var tmp86
  var tmp87
  var tmp89
  var tmp90
  var tmp91
  var tmp93
  var tmp94
  var tmplab, tmplab_js
//
  // __patsflab_testcase4_5
  set_innerHTML(arg1, "<ul><li>2</li><li>3</li></ul>");
  tmp80 = createTextNode(arg0, "1");
  tmp81 = createElement(arg0, "li");
  tmp82 = appendChild(tmp81, tmp80);
  tmp83 = firstChild(arg1);
  tmp86 = domnoderef_is_null(tmp83);
  tmp85 = ats2jspre_neg_bool1(tmp86);
  atspre_assert_bool1(tmp85);
  tmp87 = firstChild(tmp83);
  tmp90 = domnoderef_is_null(tmp87);
  tmp89 = ats2jspre_neg_bool1(tmp90);
  atspre_assert_bool1(tmp89);
  tmp91 = insertBefore(tmp83, tmp81, tmp87);
  tmp94 = get_innerHTML(arg1);
  tmp93 = ats2jspre_eq_string_string("<ul><li>1</li><li>2</li><li>3</li></ul>", tmp94);
  atspre_assert_bool0(tmp93);
  tmp83;
  return/*_void*/;
} // end-of-function


function
testcase5_6(arg0, arg1)
{
//
// knd = 0
  var tmp97
  var tmp99
  var tmp100
  var tmp101
  var tmp103
  var tmp104
  var tmp105
  var tmp106
  var tmp108
  var tmp109
  var tmp110
  var tmp112
  var tmp113
  var tmp114
  var tmp116
  var tmp117
  var tmplab, tmplab_js
//
  // __patsflab_testcase5_6
  set_innerHTML(arg1, "<div id=\"A\">Hi</div><div id=\"B\">Dude</div>");
  tmp97 = getElementById(arg0, "A");
  tmp100 = domnoderef_is_null(tmp97);
  tmp99 = ats2jspre_neg_bool1(tmp100);
  atspre_assert_bool1(tmp99);
  tmp101 = parentNode(tmp97);
  tmp104 = domnoderef_is_null(tmp101);
  tmp103 = ats2jspre_neg_bool1(tmp104);
  atspre_assert_bool1(tmp103);
  tmp105 = removeChild(tmp101, tmp97);
  tmp106 = getElementById(arg0, "B");
  tmp109 = domnoderef_is_null(tmp106);
  tmp108 = ats2jspre_neg_bool1(tmp109);
  atspre_assert_bool1(tmp108);
  tmp110 = firstChild(tmp106);
  tmp113 = domnoderef_is_null(tmp110);
  tmp112 = ats2jspre_neg_bool1(tmp113);
  atspre_assert_bool1(tmp112);
  tmp114 = removeChild(tmp106, tmp110);
  tmp117 = get_innerHTML(arg1);
  tmp116 = ats2jspre_eq_string_string("<div id=\"B\"></div>", tmp117);
  atspre_assert_bool0(tmp116);
  tmp114;
  return/*_void*/;
} // end-of-function


function
testcase6_7(arg0, arg1)
{
//
// knd = 0
  var tmp120
  var tmp122
  var tmp123
  var tmp124
  var tmp126
  var tmp128
  var tmp129
  var tmp130
  var tmp131
  var tmp133
  var tmp134
  var tmp135
  var tmp137
  var tmp138
  var tmp139
  var tmp140
  var tmp141
  var tmp142
  var tmplab, tmplab_js
//
  // __patsflab_testcase6_7
  set_innerHTML(arg1, "<div id=\"A\">Hi</div><div id=\"B\">Dude</div>");
  tmp120 = getElementById(arg0, "A");
  tmp123 = domnoderef_is_null(tmp120);
  tmp122 = ats2jspre_neg_bool1(tmp123);
  atspre_assert_bool1(tmp122);
  tmp124 = createElement(arg0, "span");
  set_textContent(tmp124, "Howdy");
  tmp126 = parentNode(tmp120);
  tmp129 = domnoderef_is_null(tmp126);
  tmp128 = ats2jspre_neg_bool1(tmp129);
  atspre_assert_bool1(tmp128);
  tmp130 = replaceChild(tmp126, tmp124, tmp120);
  tmp131 = getElementById(arg0, "B");
  tmp134 = domnoderef_is_null(tmp131);
  tmp133 = ats2jspre_neg_bool1(tmp134);
  atspre_assert_bool1(tmp133);
  tmp135 = firstChild(tmp131);
  tmp138 = domnoderef_is_null(tmp135);
  tmp137 = ats2jspre_neg_bool1(tmp138);
  atspre_assert_bool1(tmp137);
  tmp139 = createTextNode(arg0, "buddy");
  tmp140 = replaceChild(tmp131, tmp139, tmp135);
  tmp142 = get_innerHTML(arg1);
  tmp141 = ats2jspre_eq_string_string("<span>Howdy</span><div id=\"B\">buddy</div>", tmp142);
  atspre_assert_bool0(tmp141);
  return/*_void*/;
} // end-of-function


function
testcase7_8(arg0, arg1)
{
//
// knd = 0
  var tmp145
  var tmp147
  var tmp148
  var tmp149
  var tmp151
  var tmp152
  var tmplab, tmplab_js
//
  // __patsflab_testcase7_8
  set_innerHTML(arg1, "<ul>  <li>Hi</li>  <li>there</li></ul>");
  tmp145 = firstChild(arg1);
  tmp148 = domnoderef_is_null(tmp145);
  tmp147 = ats2jspre_neg_bool1(tmp148);
  atspre_assert_bool1(tmp147);
  tmp149 = cloneNode(tmp145, false);
  tmp152 = get_innerHTML(tmp149);
  tmp151 = ats2jspre_eq_string_string("", tmp152);
  atspre_assert_bool0(tmp151);
  tmp149;
  return/*_void*/;
} // end-of-function


function
testcase8_9(arg0, arg1)
{
//
// knd = 0
  var tmp155
  var tmp157
  var tmp158
  var tmp159
  var tmp161
  var tmp162
  var tmplab, tmplab_js
//
  // __patsflab_testcase8_9
  set_innerHTML(arg1, "<ul>  <li>Hi</li>  <li>there</li></ul>");
  tmp155 = firstChild(arg1);
  tmp158 = domnoderef_is_null(tmp155);
  tmp157 = ats2jspre_neg_bool1(tmp158);
  atspre_assert_bool1(tmp157);
  tmp159 = cloneNode(tmp155, true);
  tmp162 = get_innerHTML(tmp159);
  tmp161 = ats2jspre_eq_string_string("  <li>Hi</li>  <li>there</li>", tmp162);
  atspre_assert_bool0(tmp161);
  tmp159;
  return/*_void*/;
} // end-of-function


function
testcase9_10(arg0, arg1)
{
//
// knd = 0
  var tmp165
  var tmp167
  var tmp168
  var tmp169
  var tmp171
  var tmp172
  var tmp173
  var tmp174
  var tmp176
  var tmp177
  var tmp179
  var tmp180
  var tmplab, tmplab_js
//
  // __patsflab_testcase9_10
  set_innerHTML(arg1, "<ul>  <li>Hi</li>  <li>there</li></ul>");
  tmp165 = firstChild(arg1);
  tmp168 = domnoderef_is_null(tmp165);
  tmp167 = ats2jspre_neg_bool1(tmp168);
  atspre_assert_bool1(tmp167);
  tmp169 = children(tmp165);
  tmp172 = domnodelist_length(tmp169);
  tmp171 = ats2jspre_eq_int1_int1(2, tmp172);
  atspre_assert_bool1(tmp171);
  tmp173 = domnodelist_item(tmp169, 0);
  tmp174 = domnodelist_item(tmp169, 1);
  tmp177 = get_textContent(tmp173);
  tmp176 = ats2jspre_eq_string_string("Hi", tmp177);
  atspre_assert_bool0(tmp176);
  tmp180 = get_textContent(tmp174);
  tmp179 = ats2jspre_eq_string_string("there", tmp180);
  atspre_assert_bool0(tmp179);
  tmp165;
  return/*_void*/;
} // end-of-function


function
testcase10_11(arg0, arg1)
{
//
// knd = 0
  var tmp183
  var tmp185
  var tmp186
  var tmp187
  var tmp189
  var tmp190
  var tmp192
  var tmp193
  var tmp195
  var tmp196
  var tmp197
  var tmp199
  var tmp200
  var tmp202
  var tmp203
  var tmp204
  var tmp206
  var tmp207
  var tmp209
  var tmp210
  var tmp211
  var tmp213
  var tmp214
  var tmp215
  var tmp217
  var tmp218
  var tmp220
  var tmp221
  var tmplab, tmplab_js
//
  // __patsflab_testcase10_11
  set_innerHTML(arg1, "<ul><!-- comment --><li id=\"A\"></li><li id=\"B\"></li><!-- comment --></ul>");
  tmp183 = firstChild(arg1);
  tmp186 = domnoderef_is_null(tmp183);
  tmp185 = ats2jspre_neg_bool1(tmp186);
  atspre_assert_bool1(tmp185);
  tmp187 = parentNode(tmp183);
  tmp189 = ats2jspre_eq_int1_int1(tmp187, arg1);
  atspre_assert_bool1(tmp189);
  tmp190 = firstChild(tmp183);
  tmp193 = domnoderef_is_null(tmp190);
  tmp192 = ats2jspre_neg_bool1(tmp193);
  atspre_assert_bool1(tmp192);
  tmp196 = nodeName(tmp190);
  tmp195 = ats2jspre_eq_string_string("#comment", tmp196);
  atspre_assert_bool0(tmp195);
  tmp197 = lastChild(tmp183);
  tmp200 = domnoderef_is_null(tmp197);
  tmp199 = ats2jspre_neg_bool1(tmp200);
  atspre_assert_bool1(tmp199);
  tmp203 = nodeName(tmp197);
  tmp202 = ats2jspre_eq_string_string("#comment", tmp203);
  atspre_assert_bool0(tmp202);
  tmp204 = getElementById(arg0, "A");
  tmp207 = domnoderef_is_null(tmp204);
  tmp206 = ats2jspre_neg_bool1(tmp207);
  atspre_assert_bool1(tmp206);
  tmp210 = nodeName(tmp204);
  tmp209 = ats2jspre_eq_string_string("LI", tmp210);
  atspre_assert_bool0(tmp209);
  tmp211 = getElementById(arg0, "B");
  tmp214 = domnoderef_is_null(tmp211);
  tmp213 = ats2jspre_neg_bool1(tmp214);
  atspre_assert_bool1(tmp213);
  tmp215 = previousSibling(tmp211);
  tmp218 = domnoderef_is_null(tmp215);
  tmp217 = ats2jspre_neg_bool1(tmp218);
  atspre_assert_bool1(tmp217);
  tmp221 = nodeName(tmp215);
  tmp220 = ats2jspre_eq_string_string("LI", tmp221);
  atspre_assert_bool0(tmp220);
  tmp215;
  return/*_void*/;
} // end-of-function


function
testcase11_12(arg0, arg1)
{
//
// knd = 0
  var tmp224
  var tmp226
  var tmp227
  var tmp228
  var tmp230
  var tmp231
  var tmp232
  var tmp234
  var tmp235
  var tmp237
  var tmp238
  var tmp239
  var tmp241
  var tmp242
  var tmp244
  var tmp245
  var tmp246
  var tmp248
  var tmp249
  var tmp251
  var tmp252
  var tmp253
  var tmp255
  var tmp256
  var tmp258
  var tmp259
  var tmp260
  var tmp262
  var tmp263
  var tmp265
  var tmp266
  var tmp267
  var tmp269
  var tmp270
  var tmp272
  var tmp273
  var tmplab, tmplab_js
//
  // __patsflab_testcase11_12
  set_innerHTML(arg1, "<a href='#' title=\"title\" data-foo=\"dataFoo\" class=\"yes\" style=\"margin:0;\" foo=\"boo\"></a>");
  tmp224 = firstChild(arg1);
  tmp227 = domnoderef_is_null(tmp224);
  tmp226 = ats2jspre_neg_bool1(tmp227);
  atspre_assert_bool1(tmp226);
  tmp228 = attributes(tmp224);
  tmp231 = domnamednodemap_length(tmp228);
  tmp230 = ats2jspre_eq_int1_int1(6, tmp231);
  atspre_assert_bool1(tmp230);
  tmp232 = domnamednodemap_getNamedItem(tmp228, "href");
  tmp235 = domnoderef_is_null(tmp232);
  tmp234 = ats2jspre_neg_bool1(tmp235);
  atspre_assert_bool1(tmp234);
  tmp238 = attr_getValue(tmp232);
  tmp237 = ats2jspre_eq_string_string("#", tmp238);
  atspre_assert_bool0(tmp237);
  tmp239 = domnamednodemap_getNamedItem(tmp228, "title");
  tmp242 = domnoderef_is_null(tmp239);
  tmp241 = ats2jspre_neg_bool1(tmp242);
  atspre_assert_bool1(tmp241);
  tmp245 = attr_getValue(tmp239);
  tmp244 = ats2jspre_eq_string_string("title", tmp245);
  atspre_assert_bool0(tmp244);
  tmp246 = domnamednodemap_getNamedItem(tmp228, "data-foo");
  tmp249 = domnoderef_is_null(tmp246);
  tmp248 = ats2jspre_neg_bool1(tmp249);
  atspre_assert_bool1(tmp248);
  tmp252 = attr_getValue(tmp246);
  tmp251 = ats2jspre_eq_string_string("dataFoo", tmp252);
  atspre_assert_bool0(tmp251);
  tmp253 = domnamednodemap_getNamedItem(tmp228, "class");
  tmp256 = domnoderef_is_null(tmp253);
  tmp255 = ats2jspre_neg_bool1(tmp256);
  atspre_assert_bool1(tmp255);
  tmp259 = attr_getValue(tmp253);
  tmp258 = ats2jspre_eq_string_string("yes", tmp259);
  atspre_assert_bool0(tmp258);
  tmp260 = domnamednodemap_getNamedItem(tmp228, "style");
  tmp263 = domnoderef_is_null(tmp260);
  tmp262 = ats2jspre_neg_bool1(tmp263);
  atspre_assert_bool1(tmp262);
  tmp266 = attr_getValue(tmp260);
  tmp265 = ats2jspre_eq_string_string("margin:0;", tmp266);
  atspre_assert_bool0(tmp265);
  tmp267 = domnamednodemap_getNamedItem(tmp228, "foo");
  tmp270 = domnoderef_is_null(tmp267);
  tmp269 = ats2jspre_neg_bool1(tmp270);
  atspre_assert_bool1(tmp269);
  tmp273 = attr_getValue(tmp267);
  tmp272 = ats2jspre_eq_string_string("boo", tmp273);
  atspre_assert_bool0(tmp272);
  tmp224;
  return/*_void*/;
} // end-of-function


function
testcase12_13(arg0, arg1)
{
//
// knd = 0
  var tmp276
  var tmp277
  var tmp278
  var tmp280
  var tmp281
  var tmp283
  var tmp284
  var tmp286
  var tmp287
  var tmplab, tmplab_js
//
  // __patsflab_testcase12_13
  set_innerHTML(arg1, "<ul><li class=\"liClass\">Hello</li><li class=\"liClass\">big</li><li class=\"liClass\">bad</li><li class=\"liClass\">world</li></ul>");
  tmp276 = querySelectorAll(arg1, "li");
  tmp277 = getElementsByTagName(arg1, "li");
  tmp278 = getElementsByClassName(arg1, "liClass");
  tmp281 = domnodelist_length(tmp276);
  tmp280 = ats2jspre_eq_int1_int1(4, tmp281);
  atspre_assert_bool1(tmp280);
  tmp284 = domnodelist_length(tmp277);
  tmp283 = ats2jspre_eq_int1_int1(4, tmp284);
  atspre_assert_bool1(tmp283);
  tmp287 = domnodelist_length(tmp278);
  tmp286 = ats2jspre_eq_int1_int1(4, tmp287);
  atspre_assert_bool1(tmp286);
  tmp278;
  return/*_void*/;
} // end-of-function


function
hello()
{
//
// knd = 0
  var tmp289
  var tmp290
  var tmp292
  var tmp293
  var tmp330
  var tmp331
  var tmp333
  var tmp334
  var tmp336
  var tmp337
  var tmp340
  var tmplab, tmplab_js
//
  // __patsflab_hello
  tmp289 = get_document();
  tmp290 = getElementById(tmp289, "container");
  tmp293 = domnoderef_is_null(tmp290);
  tmp292 = ats2jspre_neg_bool1(tmp293);
  ats2jspre_assert_errmsg_bool1(tmp292, "woops");
  ats2jspre_print_string("1");
  ats2jspre_print_newline();
  testcase1_2(tmp289, tmp290);
  ats2jspre_print_string("2");
  ats2jspre_print_newline();
  testcase2_3(tmp289, tmp290);
  ats2jspre_print_string("3");
  ats2jspre_print_newline();
  testcase3_4(tmp289, tmp290);
  ats2jspre_print_string("4");
  ats2jspre_print_newline();
  testcase4_5(tmp289, tmp290);
  ats2jspre_print_string("5");
  ats2jspre_print_newline();
  testcase5_6(tmp289, tmp290);
  ats2jspre_print_string("6");
  ats2jspre_print_newline();
  testcase6_7(tmp289, tmp290);
  ats2jspre_print_string("7");
  ats2jspre_print_newline();
  testcase7_8(tmp289, tmp290);
  ats2jspre_print_string("8");
  ats2jspre_print_newline();
  testcase8_9(tmp289, tmp290);
  ats2jspre_print_string("9");
  ats2jspre_print_newline();
  testcase9_10(tmp289, tmp290);
  ats2jspre_print_string("10");
  ats2jspre_print_newline();
  testcase10_11(tmp289, tmp290);
  ats2jspre_print_string("11");
  ats2jspre_print_newline();
  testcase11_12(tmp289, tmp290);
  ats2jspre_print_string("12");
  ats2jspre_print_newline();
  testcase12_13(tmp289, tmp290);
  tmp330 = nest_1(tmp289, 4);
  tmp331 = getElementById(tmp289, "container");
  tmp334 = domnoderef_is_null(tmp331);
  tmp333 = ats2jspre_neg_bool1(tmp334);
  ats2jspre_assert_errmsg_bool1(tmp333, "woops");
  tmp337 = nodeType(tmp331);
  tmp336 = ats2jspre_eq_int1_int1(1, tmp337);
  ats2jspre_assert_errmsg_bool1(tmp336, "wrong nodetype!");
  ats2jspre_print_string("appending!");
  ats2jspre_print_newline();
  tmp340 = appendChild(tmp331, tmp330);
  ats2jspre_print_string("Hello, world!");
  return/*_void*/;
} // end-of-function

// dynloadflag_minit
var _057_home_057_artyom_057_projects_057_typesafe_055_dom_057_test_057_tests_056_dats__dynloadflag = 0;

function
_057_home_057_artyom_057_projects_057_typesafe_055_dom_057_test_057_tests_056_dats__dynload()
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // ATSdynload()
  // ATSdynloadflag_sta(_057_home_057_artyom_057_projects_057_typesafe_055_dom_057_test_057_tests_056_dats__dynloadflag(439))
  if(ATSCKiseqz(_057_home_057_artyom_057_projects_057_typesafe_055_dom_057_test_057_tests_056_dats__dynloadflag)) {
    _057_home_057_artyom_057_projects_057_typesafe_055_dom_057_test_057_tests_056_dats__dynloadflag = 1 ; // flag is set
    hello();
  } // end-of-if
  return/*_void*/;
} // end-of-function


function
my_dynload()
{
//
// knd = 0
  var tmplab, tmplab_js
//
  _057_home_057_artyom_057_projects_057_typesafe_055_dom_057_test_057_tests_056_dats__dynload();
  return/*_void*/;
} // end-of-function


/* ATSextcode_beg() */

function domnodelist_length(dl) { return dl.length; }
function domnodelist_item(d,i) { return d[i]; }
function domnamednodemap_length(dm) { return dm.length; }
function domnamednodemap_getNamedItem (dm, s) { return dm.getNamedItem(s); }
function domnamednodemap_setNamedItem (dm, a) { return dm.setNamedItem(a); }
function domnamednodemap_removeNamedItem (dm, s) { return dm.removeNamedItem(s); }
function domnamednodemap_item (dm, i) { return dm[i]; }
function getElementById(d,id) { return d.getElementById(id); }
function getElementsByTagName(d,t) { return d.getElementsByTagName(t); }
function getElementsByClassName(d,c) { return d.getElementsByClassName(c); }
function querySelectorAll(d,s) { return d.querySelectorAll(s); }
function domnoderef_is_null (d) { return d === null; }
function get_document () { return window.document; }
function createAttribute(doc, name) { return doc.createAttribute(name); }
function nodeType(d) { return d.nodeType; }
function nodeValue(d) { return d.nodeValue; }
function attributes (d) { return d.attributes; }
function children(d) { return d.children; }
function firstChild(d) { return d.firstChild; }
function lastChild(d) { return d.lastChild; }
function nextSibling(d) { return d.nextSibling; }
function previousSibling(d) { return d.previousSibling; }
function nodeName(d) { return d.nodeName; }
function parentNode(d) { return d.parentNode; }
function set_innerHTML (d, s) { return d.innerHTML = s; }
function get_innerHTML (d) { return d.innerHTML; }
function set_textContent (d, s) { return d.textContent = s; }
function get_textContent (d) { return d.textContent; }
function attr_setValue(a,v) { a.value = v; }
function attr_getValue(a) { return a.value; }
function setAttributeNode (elt, a) { return elt.setAttributeNode(a); }
function appendChild (node, s) { return node.appendChild(s); }
function insertBefore (node, s, b) { return node.insertBefore(s, b); }
function removeChild (node, s) { return node.removeChild(s); }
function replaceChild (node, n, c) { return node.replaceChild(n, c); }
function cloneNode(node, d) { return node.cloneNode(d); }
function createTextNode (doc, text) { return doc.createTextNode(text); }
function createElement (doc, name) { return doc.createElement(name); }
function createDocument (a, b, d) { return createDocument(a, b, d); }

function offsetLeft (e) { return e.offsetLeft; }
function offsetTop (e) { return e.offsetTop; }
function offsetParent (e) { return e.offsetParent; }
function offsetWidth (e) { return e.offsetWidth; }
function offsetHeight (e) { return e.offsetHeight; }
function clientWidth (e) { return e.clientWidth; }
function clientHeight (e) { return e.clientHeight; }
function getBoundingClientRect(d) { return d.getBoundingClientRect(); }
function elementFromPoint (d, x, y) { return d.elementFromPoint(x, y); }
function get_scrollWidth(e) { return e.scrollWidth; }
function get_scrollHeight(e) { return e.scrollHeight; }
function get_scrollTop(e) { return e.scrollTop; }
function set_scrollTop(e, v) { return e.scrollTop = v; }
function get_scrollLeft(e) { return e.scrollLeft; }
function set_scrollLeft(e, v) { return e.scrollLeft = v; }
function scrollIntoView(e, v) { return e.scrollIntoView(v); }

/* ATSextcode_end() */

/* ATSextcode_beg() */
//
function
atspre_assert_bool0(x) {
  if (!x) { throw new"assert failed!"; }
}
function
atspre_assert_bool1(x) {
  if (!x) { throw "assert failed!"; }
}
//
ats2jspre_the_print_store_clear();
my_dynload();
alert(ats2jspre_the_print_store_join());
//
/* ATSextcode_end() */

/* ****** ****** */

/* end-of-compilation-unit */
